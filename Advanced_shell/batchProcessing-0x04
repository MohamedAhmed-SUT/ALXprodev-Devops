#!/bin/bash

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
OUTPUT_DIR="pokemon_data_parallel"
ERROR_FILE="errors_parallel.txt"

mkdir -p "$OUTPUT_DIR"
: > "$ERROR_FILE"  # clear old error log

fetch_pokemon() {
    local pokemon="$1"
    echo "Fetching data for $pokemon..."
    if curl -s -f "https://pokeapi.co/api/v2/pokemon/${pokemon,,}" -o "$OUTPUT_DIR/${pokemon,,}.json"; then
        echo "Saved data to $OUTPUT_DIR/${pokemon,,}.json ✅"
    else
        echo "Failed to fetch data for $pokemon" >> "$ERROR_FILE"
    fi
}

# Track PIDs of background processes
PIDS=()

for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
    PIDS+=($!)
done

# Wait with timeout and kill if needed
TIMEOUT=15  # seconds per batch
START_TIME=$(date +%s)

for pid in "${PIDS[@]}"; do
    while kill -0 "$pid" 2>/dev/null; do
        NOW=$(date +%s)
        if (( NOW - START_TIME > TIMEOUT )); then
            echo "Process $pid timed out. Killing..."
            kill "$pid" 2>/dev/null
            break
        fi
        sleep 1
    done
done

echo "All Pokémon data fetch attempts finished!"
